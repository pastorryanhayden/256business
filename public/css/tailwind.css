@import url(https://rsms.me/inter/inter.css);
@import url(https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@400;700&display=swap);


/*
! tailwindcss v3.0.23 | MIT License | https://tailwindcss.com
*/
/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}
::before,
::after {
  --tw-content: '';
}
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/
html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: Inter var, Inter, sans-serif; /* 4 */
}
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}
/*
Remove the default font size and weight for headings.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
  color: inherit;
  text-decoration: inherit;
}
/*
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}
/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: IBM Plex Mono, monospace; /* 1 */
  font-size: 1em; /* 2 */
}
/*
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}
/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}
/*
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
  text-transform: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
  outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
  box-shadow: none;
}
/*
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}
/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}
/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}
/*
Removes the default spacing and border for appropriate elements.
*/
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}
fieldset {
  margin: 0;
  padding: 0;
}
legend {
  padding: 0;
}
ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}
/*
Prevent resizing textareas horizontally by default.
*/
textarea {
  resize: vertical;
}
/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
/*
Set the default cursor for buttons.
*/
button,
[role="button"] {
  cursor: pointer;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}
/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}
/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
img,
video {
  max-width: 100%;
  height: auto;
}
/*
Ensure the default browser behavior of the `hidden` attribute.
*/
[hidden] {
  display: none;
}
*, ::before, ::after{
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);
  --tw-ring-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow-colored: 0 0 rgba(0,0,0,0);
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
/* This is all you. */
html {
    font-family: 'Inter', sans-serif;
}
@supports (font-variation-settings: normal) {
    html {
        font-family: 'Inter var', sans-serif;
    }
}
:root {
    --plyr-audio-controls-background: transparent;
}
.player{
  position: fixed;
  left: 0px;
  right: 0px;
  bottom: 0px;
  display: flex;
  align-items: center;
  border-top-width: 1px;
    -webkit-backdrop-filter: blur(8px);
    backdrop-filter: blur(8px);
    background-color: hsla(0, 0%, 100%, .8);
    height: 60px;
    z-index: 100;
}
.player .plyr { width: 100%; }
@media (min-width: 768px) {
    .player {
        height: 80px;
    }
}
h1{
  font-family: Inter var, Inter, sans-serif;
  font-size: 3rem;
  line-height: 1;
  font-weight: 900;
}
.content{
  font-family: Inter var, Inter, sans-serif;
}
.content h2{
  margin-bottom: 2rem;
}
.content h2{
  font-size: 1.5rem;
  line-height: 2rem;
}
.content h2{
  font-weight: 700;
}
.content h3{
  margin-bottom: 1rem;
}
.content h3{
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.content h3{
  font-weight: 700;
}
.content > p {
        margin-bottom: 2em;
    }
.content a{
  -webkit-text-decoration-line: underline;
          text-decoration-line: underline;
}
.content a:hover{
  --tw-text-opacity: 1;
  color: rgba(55, 65, 81, var(--tw-text-opacity));
}
.content ul:not(.list-none){
  margin-left: 2rem;
}
.content ul:not(.list-none){
  margin-bottom: 2rem;
}
.content ul:not(.list-none){
  list-style-type: disc;
}
.content ul:not(.list-none){
  padding-left: 0px;
}
.content ul:not(.list-none) li{
  margin-bottom: 0.25rem;
}
.content ul:not(.list-none) li ul{
  margin-bottom: 0px;
}
.content ol{
  margin-left: 2rem;
}
.content ol{
  margin-bottom: 2rem;
}
.content ol{
  list-style-type: decimal;
}
.content ol{
  padding-left: 0px;
}
.content ol li{
  margin-bottom: 0.25rem;
}
.turbo-progress-bar{
  background-color: var(--primary-color);
    height: 5px;
}
[x-cloak] {
    display: none;
}
.aspect-w-16{
  position: relative;
  padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
  --tw-aspect-w: 16;
}
.aspect-w-16 > *{
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.aspect-h-9{
  --tw-aspect-h: 9;
}
.prose{
  color: var(--tw-prose-body);
  max-width: 65ch;
}
.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.prose :where(ol):not(:where([class~="not-prose"] *)){
  list-style-type: decimal;
  padding-left: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)){
  list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"] *)){
  list-style-type: disc;
  padding-left: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker{
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker{
  color: var(--tw-prose-bullets);
}
.prose :where(hr):not(:where([class~="not-prose"] *)){
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~="not-prose"] *)){
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before{
  content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after{
  content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"] *)){
  font-weight: 900;
}
.prose :where(h2):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"] *)){
  font-weight: 800;
}
.prose :where(h3):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
}
.prose :where(h4):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
}
.prose :where(figure > *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose :where(code):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"] *))::before{
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"] *))::after{
  content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-links);
}
.prose :where(pre):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"] *)){
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::before{
  content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::after{
  content: none;
}
.prose :where(table):not(:where([class~="not-prose"] *)){
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)){
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"] *)){
  vertical-align: baseline;
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose{
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.prose :where(p):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(img):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(video):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(figure):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(h2 code):not(:where([class~="not-prose"] *)){
  font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"] *)){
  font-size: 0.9em;
}
.prose :where(li):not(:where([class~="not-prose"] *)){
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.375em;
}
.prose > :where(ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}
.prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}
.prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}
.prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(hr + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}
.prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}
.prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}
.prose > :where(:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose > :where(:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}
.prose-lg{
  font-size: 1.125rem;
  line-height: 1.7777778;
}
.prose-lg :where(p):not(:where([class~="not-prose"] *)){
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}
.prose-lg :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  font-size: 1.2222222em;
  line-height: 1.4545455;
  margin-top: 1.0909091em;
  margin-bottom: 1.0909091em;
}
.prose-lg :where(blockquote):not(:where([class~="not-prose"] *)){
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  padding-left: 1em;
}
.prose-lg :where(h1):not(:where([class~="not-prose"] *)){
  font-size: 2.6666667em;
  margin-top: 0;
  margin-bottom: 0.8333333em;
  line-height: 1;
}
.prose-lg :where(h2):not(:where([class~="not-prose"] *)){
  font-size: 1.6666667em;
  margin-top: 1.8666667em;
  margin-bottom: 1.0666667em;
  line-height: 1.3333333;
}
.prose-lg :where(h3):not(:where([class~="not-prose"] *)){
  font-size: 1.3333333em;
  margin-top: 1.6666667em;
  margin-bottom: 0.6666667em;
  line-height: 1.5;
}
.prose-lg :where(h4):not(:where([class~="not-prose"] *)){
  margin-top: 1.7777778em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}
.prose-lg :where(img):not(:where([class~="not-prose"] *)){
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}
.prose-lg :where(video):not(:where([class~="not-prose"] *)){
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}
.prose-lg :where(figure):not(:where([class~="not-prose"] *)){
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}
.prose-lg :where(figure > *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}
.prose-lg :where(figcaption):not(:where([class~="not-prose"] *)){
  font-size: 0.8888889em;
  line-height: 1.5;
  margin-top: 1em;
}
.prose-lg :where(code):not(:where([class~="not-prose"] *)){
  font-size: 0.8888889em;
}
.prose-lg :where(h2 code):not(:where([class~="not-prose"] *)){
  font-size: 0.8666667em;
}
.prose-lg :where(h3 code):not(:where([class~="not-prose"] *)){
  font-size: 0.875em;
}
.prose-lg :where(pre):not(:where([class~="not-prose"] *)){
  font-size: 0.8888889em;
  line-height: 1.75;
  margin-top: 2em;
  margin-bottom: 2em;
  border-radius: 0.375rem;
  padding-top: 1em;
  padding-right: 1.5em;
  padding-bottom: 1em;
  padding-left: 1.5em;
}
.prose-lg :where(ol):not(:where([class~="not-prose"] *)){
  padding-left: 1.5555556em;
}
.prose-lg :where(ul):not(:where([class~="not-prose"] *)){
  padding-left: 1.5555556em;
}
.prose-lg :where(li):not(:where([class~="not-prose"] *)){
  margin-top: 0.6666667em;
  margin-bottom: 0.6666667em;
}
.prose-lg :where(ol > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.4444444em;
}
.prose-lg :where(ul > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.4444444em;
}
.prose-lg > :where(ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}
.prose-lg > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.3333333em;
}
.prose-lg > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.3333333em;
}
.prose-lg > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.3333333em;
}
.prose-lg > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.3333333em;
}
.prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}
.prose-lg :where(hr):not(:where([class~="not-prose"] *)){
  margin-top: 3.1111111em;
  margin-bottom: 3.1111111em;
}
.prose-lg :where(hr + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose-lg :where(h2 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose-lg :where(h3 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose-lg :where(h4 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose-lg :where(table):not(:where([class~="not-prose"] *)){
  font-size: 0.8888889em;
  line-height: 1.5;
}
.prose-lg :where(thead th):not(:where([class~="not-prose"] *)){
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}
.prose-lg :where(thead th:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}
.prose-lg :where(thead th:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}
.prose-lg :where(tbody td):not(:where([class~="not-prose"] *)){
  padding-top: 0.75em;
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}
.prose-lg :where(tbody td:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}
.prose-lg :where(tbody td:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}
.prose-lg > :where(:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}
.prose-lg > :where(:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}
.prose-indigo{
  --tw-prose-links: #4f46e5;
  --tw-prose-invert-links: #6366f1;
}
.absolute{
  position: absolute !important;
}
.relative{
  position: relative !important;
}
.inset-0{
  top: 0px !important;
  right: 0px !important;
  bottom: 0px !important;
  left: 0px !important;
}
.top-0{
  top: 0px !important;
}
.right-0{
  right: 0px !important;
}
.bottom-0{
  bottom: 0px !important;
}
.z-10{
  z-index: 10 !important;
}
.order-2{
  order: 2 !important;
}
.order-1{
  order: 1 !important;
}
.mx-auto{
  margin-left: auto !important;
  margin-right: auto !important;
}
.mb-6{
  margin-bottom: 1.5rem !important;
}
.mt-8{
  margin-top: 2rem !important;
}
.mb-2{
  margin-bottom: 0.5rem !important;
}
.mt-16{
  margin-top: 4rem !important;
}
.mt-6{
  margin-top: 1.5rem !important;
}
.mt-4{
  margin-top: 1rem !important;
}
.mb-8{
  margin-bottom: 2rem !important;
}
.mb-3{
  margin-bottom: 0.75rem !important;
}
.mt-2{
  margin-top: 0.5rem !important;
}
.mt-3{
  margin-top: 0.75rem !important;
}
.ml-3{
  margin-left: 0.75rem !important;
}
.ml-4{
  margin-left: 1rem !important;
}
.mr-2{
  margin-right: 0.5rem !important;
}
.mr-4{
  margin-right: 1rem !important;
}
.mt-px{
  margin-top: 1px !important;
}
.mr-3{
  margin-right: 0.75rem !important;
}
.mt-1{
  margin-top: 0.25rem !important;
}
.block{
  display: block !important;
}
.inline-block{
  display: inline-block !important;
}
.flex{
  display: flex !important;
}
.inline-flex{
  display: inline-flex !important;
}
.table{
  display: table !important;
}
.grid{
  display: grid !important;
}
.hidden{
  display: none !important;
}
.h-10{
  height: 2.5rem !important;
}
.h-full{
  height: 100% !important;
}
.h-5{
  height: 1.25rem !important;
}
.h-48{
  height: 12rem !important;
}
.h-96{
  height: 24rem !important;
}
.h-8{
  height: 2rem !important;
}
.h-12{
  height: 3rem !important;
}
.min-h-screen{
  min-height: 100vh !important;
}
.min-h-full{
  min-height: 100% !important;
}
.w-\[300px\]{
  width: 300px !important;
}
.w-full{
  width: 100% !important;
}
.w-5{
  width: 1.25rem !important;
}
.w-\[350px\]{
  width: 350px !important;
}
.w-16{
  width: 4rem !important;
}
.w-8{
  width: 2rem !important;
}
.w-12{
  width: 3rem !important;
}
.max-w-6xl{
  max-width: 72rem !important;
}
.max-w-lg{
  max-width: 32rem !important;
}
.max-w-prose{
  max-width: 65ch !important;
}
.max-w-md{
  max-width: 28rem !important;
}
.flex-1{
  flex: 1 1 0% !important;
}
.grow{
  flex-grow: 1 !important;
}
.origin-bottom-left{
  transform-origin: bottom left !important;
}
.translate-y-24{
  --tw-translate-y: 6rem !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}
.translate-y-0{
  --tw-translate-y: 0px !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}
.transform{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}
.transform-gpu{
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}
.flex-col{
  flex-direction: column !important;
}
.flex-wrap{
  flex-wrap: wrap !important;
}
.items-start{
  align-items: flex-start !important;
}
.items-center{
  align-items: center !important;
}
.justify-center{
  justify-content: center !important;
}
.justify-between{
  justify-content: space-between !important;
}
.gap-16{
  gap: 4rem !important;
}
.space-x-4 > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0 !important;
  margin-right: calc(1rem * var(--tw-space-x-reverse)) !important;
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse))) !important;
}
.space-y-6 > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0 !important;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse))) !important;
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse)) !important;
}
.space-x-10 > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0 !important;
  margin-right: calc(2.5rem * var(--tw-space-x-reverse)) !important;
  margin-left: calc(2.5rem * calc(1 - var(--tw-space-x-reverse))) !important;
}
.space-x-5 > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0 !important;
  margin-right: calc(1.25rem * var(--tw-space-x-reverse)) !important;
  margin-left: calc(1.25rem * calc(1 - var(--tw-space-x-reverse))) !important;
}
.space-x-6 > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0 !important;
  margin-right: calc(1.5rem * var(--tw-space-x-reverse)) !important;
  margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse))) !important;
}
.space-x-2 > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0 !important;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse)) !important;
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse))) !important;
}
.space-x-3 > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0 !important;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse)) !important;
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse))) !important;
}
.space-y-3 > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0 !important;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse))) !important;
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse)) !important;
}
.space-y-2 > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0 !important;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse))) !important;
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse)) !important;
}
.divide-y-2 > :not([hidden]) ~ :not([hidden]){
  --tw-divide-y-reverse: 0 !important;
  border-top-width: calc(2px * calc(1 - var(--tw-divide-y-reverse))) !important;
  border-bottom-width: calc(2px * var(--tw-divide-y-reverse)) !important;
}
.divide-gray-200 > :not([hidden]) ~ :not([hidden]){
  --tw-divide-opacity: 1 !important;
  border-color: rgba(229, 231, 235, var(--tw-divide-opacity)) !important;
}
.overflow-hidden{
  overflow: hidden !important;
}
.overflow-visible{
  overflow: visible !important;
}
.whitespace-nowrap{
  white-space: nowrap !important;
}
.rounded{
  border-radius: 0.25rem !important;
}
.rounded-md{
  border-radius: 0.375rem !important;
}
.rounded-full{
  border-radius: 9999px !important;
}
.border{
  border-width: 1px !important;
}
.border-t{
  border-top-width: 1px !important;
}
.border-b{
  border-bottom-width: 1px !important;
}
.border-b-3{
  border-bottom-width: 3px !important;
}
.border-r{
  border-right-width: 1px !important;
}
.border-gray-300{
  --tw-border-opacity: 1 !important;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity)) !important;
}
.border-black{
  --tw-border-opacity: 1 !important;
  border-color: rgba(0, 0, 0, var(--tw-border-opacity)) !important;
}
.border-transparent{
  border-color: transparent !important;
}
.border-gray-200{
  --tw-border-opacity: 1 !important;
  border-color: rgba(229, 231, 235, var(--tw-border-opacity)) !important;
}
.bg-white{
  --tw-bg-opacity: 1 !important;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity)) !important;
}
.bg-secondary{
  background-color: var(--secondary-color) !important;
}
.bg-blue-100{
  --tw-bg-opacity: 1 !important;
  background-color: rgba(219, 234, 254, var(--tw-bg-opacity)) !important;
}
.object-cover{
  -o-object-fit: cover !important;
     object-fit: cover !important;
}
.p-2{
  padding: 0.5rem !important;
}
.p-0{
  padding: 0px !important;
}
.p-1{
  padding: 0.25rem !important;
}
.px-6{
  padding-left: 1.5rem !important;
  padding-right: 1.5rem !important;
}
.py-8{
  padding-top: 2rem !important;
  padding-bottom: 2rem !important;
}
.py-4{
  padding-top: 1rem !important;
  padding-bottom: 1rem !important;
}
.px-3{
  padding-left: 0.75rem !important;
  padding-right: 0.75rem !important;
}
.py-2{
  padding-top: 0.5rem !important;
  padding-bottom: 0.5rem !important;
}
.py-6{
  padding-top: 1.5rem !important;
  padding-bottom: 1.5rem !important;
}
.py-px{
  padding-top: 1px !important;
  padding-bottom: 1px !important;
}
.px-4{
  padding-left: 1rem !important;
  padding-right: 1rem !important;
}
.py-3{
  padding-top: 0.75rem !important;
  padding-bottom: 0.75rem !important;
}
.py-16{
  padding-top: 4rem !important;
  padding-bottom: 4rem !important;
}
.pr-24{
  padding-right: 6rem !important;
}
.pt-8{
  padding-top: 2rem !important;
}
.pb-24{
  padding-bottom: 6rem !important;
}
.pr-32{
  padding-right: 8rem !important;
}
.pt-16{
  padding-top: 4rem !important;
}
.pb-8{
  padding-bottom: 2rem !important;
}
.pt-\[2px\]{
  padding-top: 2px !important;
}
.pb-20{
  padding-bottom: 5rem !important;
}
.pt-10{
  padding-top: 2.5rem !important;
}
.pr-8{
  padding-right: 2rem !important;
}
.pl-3{
  padding-left: 0.75rem !important;
}
.pr-6{
  padding-right: 1.5rem !important;
}
.pt-4{
  padding-top: 1rem !important;
}
.text-left{
  text-align: left !important;
}
.text-center{
  text-align: center !important;
}
.font-mono{
  font-family: IBM Plex Mono, monospace !important;
}
.text-lg{
  font-size: 1.125rem !important;
  line-height: 1.75rem !important;
}
.text-2xl{
  font-size: 1.5rem !important;
  line-height: 2rem !important;
}
.text-xs{
  font-size: 0.75rem !important;
  line-height: 1rem !important;
}
.text-sm{
  font-size: 0.875rem !important;
  line-height: 1.25rem !important;
}
.text-3xl{
  font-size: 1.875rem !important;
  line-height: 2.25rem !important;
}
.text-xl{
  font-size: 1.25rem !important;
  line-height: 1.75rem !important;
}
.text-base{
  font-size: 1rem !important;
  line-height: 1.5rem !important;
}
.font-bold{
  font-weight: 700 !important;
}
.font-medium{
  font-weight: 500 !important;
}
.font-extrabold{
  font-weight: 800 !important;
}
.font-semibold{
  font-weight: 600 !important;
}
.uppercase{
  text-transform: uppercase !important;
}
.italic{
  font-style: italic !important;
}
.leading-snug{
  line-height: 1.375 !important;
}
.leading-8{
  line-height: 2rem !important;
}
.tracking-widest{
  letter-spacing: 0.1em !important;
}
.tracking-tight{
  letter-spacing: -0.025em !important;
}
.tracking-wide{
  letter-spacing: 0.025em !important;
}
.text-gray-500{
  --tw-text-opacity: 1 !important;
  color: rgba(107, 114, 128, var(--tw-text-opacity)) !important;
}
.text-gray-700{
  --tw-text-opacity: 1 !important;
  color: rgba(55, 65, 81, var(--tw-text-opacity)) !important;
}
.text-white{
  --tw-text-opacity: 1 !important;
  color: rgba(255, 255, 255, var(--tw-text-opacity)) !important;
}
.text-gray-400{
  --tw-text-opacity: 1 !important;
  color: rgba(156, 163, 175, var(--tw-text-opacity)) !important;
}
.text-gray-300{
  --tw-text-opacity: 1 !important;
  color: rgba(209, 213, 219, var(--tw-text-opacity)) !important;
}
.text-gray-900{
  --tw-text-opacity: 1 !important;
  color: rgba(17, 24, 39, var(--tw-text-opacity)) !important;
}
.text-indigo-600{
  --tw-text-opacity: 1 !important;
  color: rgba(79, 70, 229, var(--tw-text-opacity)) !important;
}
.text-gray-800{
  --tw-text-opacity: 1 !important;
  color: rgba(31, 41, 55, var(--tw-text-opacity)) !important;
}
.text-blue-900{
  --tw-text-opacity: 1 !important;
  color: rgba(30, 58, 138, var(--tw-text-opacity)) !important;
}
.underline{
  -webkit-text-decoration-line: underline !important;
          text-decoration-line: underline !important;
}
.antialiased{
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale !important;
}
.shadow-2xl{
  --tw-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25) !important;
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow) !important;
}
.shadow-xl{
  --tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1) !important;
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow) !important;
}
.shadow{
  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1) !important;
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow) !important;
}
.shadow-lg{
  --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1) !important;
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow) !important;
}
.outline-none{
  outline: 2px solid transparent !important;
  outline-offset: 2px !important;
}
.filter{
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}
.transition{
  transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter !important;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter !important;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter !important;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
  transition-duration: 150ms !important;
}
.duration-200{
  transition-duration: 200ms !important;
}
.duration-300{
  transition-duration: 300ms !important;
}
.ease-in-out{
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
}
.ease-out{
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1) !important;
}
.ease-in{
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1) !important;
}
.hover\:-translate-y-1:hover{
  --tw-translate-y: -0.25rem !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}
.hover\:bg-primary:hover{
  background-color: var(--primary-color) !important;
}
.hover\:bg-gray-50:hover{
  --tw-bg-opacity: 1 !important;
  background-color: rgba(249, 250, 251, var(--tw-bg-opacity)) !important;
}
.hover\:bg-blue-100:hover{
  --tw-bg-opacity: 1 !important;
  background-color: rgba(219, 234, 254, var(--tw-bg-opacity)) !important;
}
.hover\:text-gray-700:hover{
  --tw-text-opacity: 1 !important;
  color: rgba(55, 65, 81, var(--tw-text-opacity)) !important;
}
.hover\:text-black:hover{
  --tw-text-opacity: 1 !important;
  color: rgba(0, 0, 0, var(--tw-text-opacity)) !important;
}
.hover\:text-indigo-500:hover{
  --tw-text-opacity: 1 !important;
  color: rgba(99, 102, 241, var(--tw-text-opacity)) !important;
}
.hover\:shadow-lg:hover{
  --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1) !important;
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow) !important;
}
.hover\:drop-shadow-lg:hover{
  --tw-drop-shadow: drop-shadow(0 10px 8px rgba(0, 0, 0, 0.04)) drop-shadow(0 4px 3px rgba(0, 0, 0, 0.1)) !important;
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}
.focus\:outline-none:focus{
  outline: 2px solid transparent !important;
  outline-offset: 2px !important;
}
.focus\:ring-2:focus{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 0 rgba(0,0,0,0) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 0 rgba(0,0,0,0) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 rgba(0,0,0,0)) !important;
}
.focus\:ring-gray-900:focus{
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: rgba(17, 24, 39, var(--tw-ring-opacity)) !important;
}
.focus\:ring-offset-2:focus{
  --tw-ring-offset-width: 2px !important;
}
.group:hover .group-hover\:-translate-y-16{
  --tw-translate-y: -4rem !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}
.group:hover .group-hover\:rotate-12{
  --tw-rotate: 12deg !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}
.group:hover .group-hover\:-rotate-12{
  --tw-rotate: -12deg !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}
.group:hover .group-hover\:bg-blue-200{
  --tw-bg-opacity: 1 !important;
  background-color: rgba(191, 219, 254, var(--tw-bg-opacity)) !important;
}
.group:hover .group-hover\:text-gray-700{
  --tw-text-opacity: 1 !important;
  color: rgba(55, 65, 81, var(--tw-text-opacity)) !important;
}
@media (min-width: 640px){
  .sm\:block{
    display: block !important;
  }
  .sm\:justify-end{
    justify-content: flex-end !important;
  }
  .sm\:px-6{
    padding-left: 1.5rem !important;
    padding-right: 1.5rem !important;
  }
  .sm\:text-4xl{
    font-size: 2.25rem !important;
    line-height: 2.5rem !important;
  }
}
@media (min-width: 768px){
  .md\:order-first{
    order: -9999 !important;
  }
  .md\:mt-24{
    margin-top: 6rem !important;
  }
  .md\:mb-8{
    margin-bottom: 2rem !important;
  }
  .md\:block{
    display: block !important;
  }
  .md\:flex{
    display: flex !important;
  }
  .md\:hidden{
    display: none !important;
  }
  .md\:w-\[500px\]{
    width: 500px !important;
  }
  .md\:w-1\/2{
    width: 50% !important;
  }
  .md\:w-auto{
    width: auto !important;
  }
  .md\:w-\[1000px\]{
    width: 1000px !important;
  }
  .md\:w-\[350px\]{
    width: 350px !important;
  }
  .md\:flex-row{
    flex-direction: row !important;
  }
  .md\:flex-col{
    flex-direction: column !important;
  }
  .md\:justify-start{
    justify-content: flex-start !important;
  }
  .md\:space-x-4 > :not([hidden]) ~ :not([hidden]){
    --tw-space-x-reverse: 0 !important;
    margin-right: calc(1rem * var(--tw-space-x-reverse)) !important;
    margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse))) !important;
  }
  .md\:border-0{
    border-width: 0px !important;
  }
  .md\:border-none{
    border-style: none !important;
  }
  .md\:py-16{
    padding-top: 4rem !important;
    padding-bottom: 4rem !important;
  }
  .md\:py-20{
    padding-top: 5rem !important;
    padding-bottom: 5rem !important;
  }
  .md\:pr-32{
    padding-right: 8rem !important;
  }
  .md\:shadow-3xl{
    --tw-shadow: 40px 60px 90px -15px rgba(0, 0, 0, 0.3) !important;
    --tw-shadow-colored: 40px 60px 90px -15px var(--tw-shadow-color) !important;
    box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
    box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow) !important;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow) !important;
  }
}
@media (min-width: 1024px){
  .lg\:max-w-7xl{
    max-width: 80rem !important;
  }
  .lg\:grid-cols-2{
    grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
  }
  .lg\:gap-x-5{
    -moz-column-gap: 1.25rem !important;
         column-gap: 1.25rem !important;
  }
  .lg\:gap-y-12{
    row-gap: 3rem !important;
  }
  .lg\:px-8{
    padding-left: 2rem !important;
    padding-right: 2rem !important;
  }
  .lg\:pt-24{
    padding-top: 6rem !important;
  }
  .lg\:pb-28{
    padding-bottom: 7rem !important;
  }
}

